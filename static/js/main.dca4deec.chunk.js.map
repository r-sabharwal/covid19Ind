{"version":3,"sources":["Components/virus.png","Components/app-debug.apk","Components/android.svg","Components/IndiaDataComponent.js","Components/IndiaStatesComponent.js","Components/NavComponent.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NationData","props","state","loading","IndData","GraphData","confirmedData","activeData","deceasedData","recoveredData","fetch","response","json","data","this","setState","TT","console","log","resp","d","cases_time_series","slice","length","activearr","confirmarr","deceasearr","recoverarr","i","activeobj","parseInt","dailyconfirmed","dailydeceased","dailyrecovered","confirmobj","deceaseobj","recoverobj","push","className","total","style","fontSize","delta","confirmed","ResponsiveContainer","width","height","LineChart","Line","type","dataKey","stroke","strokeWidth","dot","marginTop","recovered","deceased","other","PureComponent","StatesView","StateData","statewise","background","margin","padding","fontWeight","map","sdata","wordWrap","active","deaths","Component","NavComponent","defaultOptions","loop","animationData","animdata","rendererSettings","preserveAspectRatio","dark","color","src","logo","alt","position","left","right","options","href","app","download","andicon","App","Date","textAlign","toLocaleString","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.dca4deec.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/virus.b88f042f.png\";","module.exports = __webpack_public_path__ + \"static/media/app-debug.88d89c8d.apk\";","module.exports = __webpack_public_path__ + \"static/media/android.d275ae5d.svg\";","import React, {  PureComponent } from 'react';\r\nimport {LineChart, Line, ResponsiveContainer} from 'recharts';\r\nimport \"./IndiaDataComponent.css\";\r\n\r\n\r\nclass NationData extends PureComponent {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            loading: true,\r\n            IndData: null,\r\n            GraphData: null,\r\n            confirmedData:null,\r\n            activeData: null,\r\n            deceasedData: null,\r\n            recoveredData: null,\r\n        }\r\n    }\r\n    async componentDidMount(){\r\n        const response = await fetch(\"https://api.covid19india.org/v4/data.json\");\r\n        const data = await response.json();\r\n        this.setState({IndData: data.TT, loading: false})\r\n        console.log(this.state.IndData)\r\n        const resp = await fetch(\"https://api.covid19india.org/data.json\");\r\n        const d = await resp.json();\r\n        this.setState({GraphData: d.cases_time_series.slice(d.cases_time_series.length-30, d.cases_time_series.length), loading: false});\r\n\r\n        var activearr = [];\r\n        var confirmarr=[];\r\n        var deceasearr=[];\r\n        var recoverarr=[];\r\n        for(var i=0;i< this.state.GraphData.length;i++){\r\n            var activeobj = {\r\n                \"active\": parseInt(this.state.GraphData[i].dailyconfirmed)-parseInt(this.state.GraphData[i].dailydeceased)-parseInt(this.state.GraphData[i].dailyrecovered),\r\n            }\r\n            var confirmobj ={\r\n                \"confirm\": parseInt(this.state.GraphData[i].dailyconfirmed)\r\n            }\r\n            var deceaseobj={\r\n                \"decease\": parseInt(this.state.GraphData[i].dailydeceased)\r\n            }\r\n            var recoverobj={\r\n                \"recover\": parseInt(this.state.GraphData[i].dailyrecovered)\r\n            }\r\n            activearr.push(activeobj);\r\n            confirmarr.push(confirmobj);\r\n            deceasearr.push(deceaseobj);\r\n            recoverarr.push(recoverobj);\r\n        }\r\n        this.setState({activeData: activearr, confirmedData:confirmarr, deceasedData: deceasearr, recoveredData: recoverarr});\r\n        console.log(this.state.activeData);\r\n        console.log(this.state.GraphData)\r\n        console.log(this.state.GraphData.length)\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"totcases\">\r\n                <div>\r\n\r\n                {this.state.loading || (!this.state.IndData.total && !this.state.GraphData)? (\r\n                    <div>loading ...</div>\r\n                ) :\r\n\r\n            <div>\r\n                <div className='row justify-content-center' >\r\n                    <div className=\"confirmed col-3 \">\r\n                        <h6 style={{fontSize: 14}}>Confirmed</h6>\r\n                        <p>+{this.state.IndData.delta.confirmed}</p>\r\n                        <h2>{this.state.IndData.total.confirmed}</h2>\r\n                        <div  className=\"minichart\">\r\n                        <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                            <LineChart width={150} height={100} data={this.state.confirmedData}>\r\n                            <Line type=\"monotone\" dataKey=\"confirm\" stroke=\"red\" strokeWidth={2}  dot={false}/>\r\n                            </LineChart>\r\n                        </ResponsiveContainer>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"active col-3\">\r\n                        <h6 style={{fontSize: 14}}>Active</h6>\r\n                        <h2 style={{marginTop: 50}}>{this.state.IndData.total.confirmed - this.state.IndData.total.recovered - this.state.IndData.total.deceased - this.state.IndData.total.other}</h2>\r\n                        <div className=\"minichart\" >\r\n                        <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n\r\n                        <LineChart width={150} height={100} data={this.state.activeData}>\r\n                        <Line type=\"monotone\" dataKey=\"active\" stroke=\"blue\" strokeWidth={2} dot={false}/>\r\n                        </LineChart>\r\n                        </ResponsiveContainer>\r\n\r\n                        </div>\r\n                        \r\n                    </div>\r\n\r\n                    <div className=\"recovered col-3\">\r\n                        <h6 style={{fontSize: 14}}>Recovered</h6>\r\n                        <p>+{this.state.IndData.delta.recovered}</p>\r\n                        <h2>{this.state.IndData.total.recovered}</h2>\r\n                        <div  className=\"minichart\" >\r\n                        <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n\r\n                        <LineChart width={150} height={100} data={this.state.recoveredData}>\r\n                        <Line type=\"monotone\" dataKey=\"recover\" stroke=\"green\" strokeWidth={2}  dot={false} />\r\n                        </LineChart>\r\n                        </ResponsiveContainer>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"deceased col-3\">\r\n                        <h6 style={{fontSize: 14}}>Deceased</h6>\r\n                        <p>+{this.state.IndData.delta.deceased}</p>\r\n                        <h2>{this.state.IndData.total.deceased}</h2>\r\n                        <div  className=\"minichart\">\r\n                        <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                        <LineChart width={150} height={100}  data={this.state.deceasedData}>\r\n                        <Line type=\"monotone\" dataKey=\"decease\" stroke=\"Grey\" strokeWidth={2} dot={false}/>\r\n                        </LineChart>\r\n                        </ResponsiveContainer>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            }\r\n                </div>\r\n \r\n            </div>\r\n        );\r\n\r\n        }\r\n    }\r\n\r\n\r\nexport default NationData;","import React, { Component } from 'react'\r\n\r\n  \r\nclass StatesView extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            loading: true,\r\n            StateData: null\r\n        }\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const response = await fetch(\"https://api.covid19india.org/data.json\");\r\n        const data = await response.json();\r\n        this.setState({StateData: data.statewise, loading: false})\r\n        console.log(this.state.StateData)\r\n    }\r\n \r\n    render(){\r\n        if(this.state.loading === false){\r\n            return (\r\n                <div>\r\n                <div className=\"container\">\r\n                <div className=\"row\">\r\n                <div className=\"col shadow-md p-2 rounded\" style={{background: \"#e0e0e0\", margin: 5, padding: 10, fontSize: 12, fontWeight: 'bold'}}>State/UT</div>\r\n                <div className=\"col shadow-md p-2 rounded\" style={{background: \"#e0e0e0\", margin: 5, padding: 10, fontSize: 12, fontWeight: 'bold'}}>Confirmed</div>\r\n                <div className=\"col shadow-md p-2 rounded\" style={{background: \"#e0e0e0\", margin: 5, padding: 10, fontSize: 12, fontWeight: 'bold'}}>Active</div>\r\n                <div className=\"col shadow-md p-2 rounded\" style={{background: \"#e0e0e0\", margin: 5, padding: 10 , fontSize: 12, fontWeight: 'bold'}}>Recovered</div>\r\n                <div className=\"col shadow-md p-2 rounded\" style={{background: \"#e0e0e0\", margin: 5, padding: 10, fontSize: 12, fontWeight: 'bold'}}>Deceased</div>\r\n                </div>\r\n                    </div>\r\n                {this.state.StateData.map((sdata) => (\r\n                        <div>\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                            <div className=\"col shadow-md p-2 rounded\" style={{background: \"#e0e0e0\", margin: 5, padding: 10 , fontSize: 12, wordWrap: \"break-word\", fontWeight: 'bold'}}>{sdata.state}</div>\r\n                            <div className=\"col shadow-md p-2 rounded\" style={{background: \"#f7f7f7\", margin: 5, padding: 10, fontSize: 12}}>{sdata.confirmed}</div>\r\n                            <div className=\"col shadow-md p-2 rounded\" style={{background: \"#f7f7f7\", margin: 5, padding: 10, fontSize: 12}}>{sdata.active}</div>\r\n                            <div className=\"col\" style={{background: \"#f7f7f7\", margin: 5,  padding: 10, fontSize: 12}}>{sdata.recovered}</div>\r\n                            <div className=\"col\" style={{background: \"#f7f7f7\", margin: 5,  padding: 10, fontSize: 12}}>{sdata.deaths}</div>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n    ))}\r\n                </div>\r\n            );\r\n        }\r\n        return (\r\n            <div>loading ....</div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StatesView","import React, { Component } from 'react'\r\nimport { Navbar, NavbarBrand} from 'reactstrap'\r\nimport Lottie from 'react-lottie'\r\nimport animdata from './logo.json'\r\nimport logo from './virus.png'\r\nimport { Button } from \"reactstrap\";\r\nimport app from './app-debug.apk'\r\nimport andicon from './android.svg'\r\n\r\nclass NavComponent extends Component {\r\n\r\n    render(){\r\n        const defaultOptions = {\r\n            loop: true,\r\n            animationData: animdata,\r\n            rendererSettings: {\r\n              preserveAspectRatio: \"xMidYMid slice\"\r\n            }\r\n        };\r\n        return (\r\n\r\n            <div>\r\n                <Navbar  dark={true} style={{background: \"black\"}}>\r\n            <div className=\"container-fluid \">\r\n\r\n            <NavbarBrand style={{color: \"white\"}}>\r\n              <img src={logo} style={{height: 30 , margin: \"auto auto\"}} alt=\"logo\"/>\r\n              Covid19 Tracker\r\n              </NavbarBrand>\r\n              <Lottie style={{position: \"absolute\",left: \"auto\",right: 0}}\r\n                      options={defaultOptions}\r\n                      height={100}\r\n                      width={100}></Lottie>\r\n            </div>\r\n          \r\n          </Navbar>\r\n          \r\n          <Button color=\"primary\" style={{marginTop: 5}}><a href={app} download style={{color: \"white\"}}>\r\n            <img src={andicon} style={{height: 30 , margin: \"auto auto\"}} alt=\"app\"/>Android App</a></Button>\r\n           </div>\r\n        )\r\n    }\r\n\r\n};\r\n\r\nexport default NavComponent","import React, { Component } from 'react';\r\nimport NationData from './Components/IndiaDataComponent';\r\nimport StatesView from './Components/IndiaStatesComponent'\r\nimport './App.css';\r\nimport NavComponent from './Components/NavComponent'\r\n\r\nclass App extends Component {\r\n\r\n\r\n\r\nrender(){\r\n  var d = new Date();\r\n  return (\r\n    <div className=\"App\">\r\n        <NavComponent/>\r\n        <p style={{textAlign: \"center\", margin:20}}>{d.toLocaleString()}</p>\r\n        <NationData />\r\n        <StatesView/>\r\n    </div>\r\n  );\r\n}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}