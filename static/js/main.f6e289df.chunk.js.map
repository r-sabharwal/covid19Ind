{"version":3,"sources":["Components/virus.png","Components/app-debug.apk","Components/android.svg","Components/IndiaDataCompnent.js","Components/IndiaStatesComponent.js","Components/NavComponent.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NationData","props","state","loading","IndData","GraphData","fetch","response","json","data","this","setState","TT","console","log","resp","d","cases_time_series","slice","length","className","total","style","background","textAlign","color","marginLeft","marginRight","marginTop","boxShadow","fontSize","delta","confirmed","width","height","margin","type","dataKey","stroke","strokeWidth","dot","recovered","deceased","other","padding","Component","StatesView","StateData","statewise","fontWeight","map","sdata","wordWrap","active","deaths","NavComponent","defaultOptions","loop","animationData","animdata","rendererSettings","preserveAspectRatio","dark","src","logo","position","left","right","options","href","app","download","andicon","App","Date","toLocaleString","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f6e289df.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/virus.cc74486f.png\";","module.exports = __webpack_public_path__ + \"static/media/app-debug.88d89c8d.apk\";","module.exports = __webpack_public_path__ + \"static/media/android.4f8427a0.svg\";","import React, { Component } from 'react';\nimport {\n    LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n  } from 'recharts';\n\n\nclass NationData extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            loading: true,\n            IndData: null,\n            GraphData: null\n        }\n    }\n\n    async componentDidMount(){\n        const response = await fetch(\"https://api.covid19india.org/v4/data.json\");\n        const data = await response.json();\n        this.setState({IndData: data.TT, loading: false})\n        console.log(this.state.IndData)\n        const resp = await fetch(\"https://api.covid19india.org/data.json\");\n        const d = await resp.json();\n        this.setState({GraphData: d.cases_time_series.slice(d.cases_time_series.length-30, d.cases_time_series.length), loading: false});\n        console.log(this.state.GraphData)\n        console.log(this.state.GraphData.length)\n    }\n\n    render(){\n        return (\n            <div className=\"container-fluid\">\n                <div>\n\n                {this.state.loading || !this.state.IndData.total && !this.state.GraphData? (\n                    <div>loading ...</div>\n                ) :\n\n            <div>\n                <div className='row justify-content-center' style={{background: \"\"}}>\n                    <div className=\"col-5 col-lg-2 shadow-lg p-4 mb-5 bg-white rounded\" style={{textAlign: \"center\", color: \"red\", marginLeft: 10, marginRight:10, marginTop: 5, boxShadow: \"1px 1px 2px black\"}}>\n                        <h6 style={{fontSize: 14}}>Confirmed</h6>\n                        <p>+{this.state.IndData.delta.confirmed}</p>\n                        <h2>{this.state.IndData.total.confirmed}</h2>\n                        <div>\n                        <LineChart width={150} height={100} data={this.state.GraphData} style={{margin: \"auto auto\"}}>\n                        <Line type=\"monotone\" dataKey=\"dailyconfirmed\" stroke=\"Red\" strokeWidth={3} dot={false}/>\n                        </LineChart>\n                        </div>\n                    </div>\n                    <div className=\"col-5 col-lg-2 shadow-lg p-4 mb-5 bg-white rounded\" style={{textAlign: \"center\", color: \"blue\", marginLeft: 10, marginRight:10, marginTop: 5, boxShadow: \"1px 1px 2px black\"}}>\n                        <h6 style={{fontSize: 14}}>Active</h6>\n                        <h2 style={{marginTop: 50}}>{this.state.IndData.total.confirmed - this.state.IndData.total.recovered - this.state.IndData.total.deceased - this.state.IndData.total.other}</h2>\n                    </div>\n                    <div className=\"col-5 col-lg-2 shadow-lg p-4 mb-5 bg-white rounded\" style={{textAlign: \"center\", color: \"green\", marginLeft: 10, marginRight:10, boxShadow: \"1px 1px 2px black\"}}>\n                        <h6 style={{fontSize: 14}}>Recovered</h6>\n                        <p>+{this.state.IndData.delta.recovered}</p>\n                        <h2>{this.state.IndData.total.recovered}</h2>\n                        <div style={{marginTop: 10}}>\n                        <LineChart width={150} height={100} data={this.state.GraphData} style={{margin: \"auto auto\", padding: \"auto\"}}>\n                        <Line type=\"monotone\" dataKey=\"dailyrecovered\" stroke=\"Green\" strokeWidth={3} dot={false}/>\n                        </LineChart>\n                        </div>\n                    </div>\n                    <div className=\"col-5 col-lg-2 shadow-lg p-4 mb-5 bg-white rounded\" style={{textAlign: \"center\", color: \"grey\", marginLeft: 10, marginRight:10, boxShadow: \"1px 1px 2px black\"}}>\n                        <h6 style={{fontSize: 14}}>Deceased</h6>\n                        <p>+{this.state.IndData.delta.deceased}</p>\n                        <h2>{this.state.IndData.total.deceased}</h2>\n                        <div>\n                        <LineChart width={150} height={100} data={this.state.GraphData} style={{margin: \"auto auto\", padding: \"auto\"}}>\n                        <Line type=\"monotone\" dataKey=\"dailydeceased\" stroke=\"Grey\" strokeWidth={3} dot={false}/>\n                        </LineChart>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            }\n                </div>\n \n            </div>\n        );\n\n        }\n    }\n\n\nexport default NationData;","import React, { Component } from 'react'\nimport {\n    LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n  } from 'recharts';\n  \n\n  \nclass StatesView extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            loading: true,\n            StateData: null\n        }\n    }\n\n    async componentDidMount(){\n        const response = await fetch(\"https://api.covid19india.org/data.json\");\n        const data = await response.json();\n        this.setState({StateData: data.statewise, loading: false})\n        console.log(this.state.StateData)\n    }\n \n    render(){\n        if(this.state.loading === false){\n            return (\n                <div>\n                <div className=\"container\">\n                <div className=\"row\">\n                <div className=\"col shadow-md p-2 rounded\" style={{background: \"#e0e0e0\", margin: 5, padding: 10, fontSize: 12, fontWeight: 'bold'}}>State/UT</div>\n                <div className=\"col shadow-md p-2 rounded\" style={{background: \"#e0e0e0\", margin: 5, padding: 10, fontSize: 12, fontWeight: 'bold'}}>Confirmed</div>\n                <div className=\"col shadow-md p-2 rounded\" style={{background: \"#e0e0e0\", margin: 5, padding: 10, fontSize: 12, fontWeight: 'bold'}}>Active</div>\n                <div className=\"col shadow-md p-2 rounded\" style={{background: \"#e0e0e0\", margin: 5, padding: 10 , fontSize: 12, fontWeight: 'bold'}}>Recovered</div>\n                <div className=\"col shadow-md p-2 rounded\" style={{background: \"#e0e0e0\", margin: 5, padding: 10, fontSize: 12, fontWeight: 'bold'}}>Deceased</div>\n                </div>\n                    </div>\n                {this.state.StateData.map((sdata) => (\n                        <div>\n                        <div className=\"container\">\n                            <div className=\"row\">\n                            <div className=\"col shadow-md p-2 rounded\" style={{background: \"#e0e0e0\", margin: 5, padding: 10 , fontSize: 12, wordWrap: \"break-word\", fontWeight: 'bold'}}>{sdata.state}</div>\n                            <div className=\"col shadow-md p-2 rounded\" style={{background: \"#f7f7f7\", margin: 5, padding: 10, fontSize: 12}}>{sdata.confirmed}</div>\n                            <div className=\"col shadow-md p-2 rounded\" style={{background: \"#f7f7f7\", margin: 5, padding: 10, fontSize: 12}}>{sdata.active}</div>\n                            <div className=\"col\" style={{background: \"#f7f7f7\", margin: 5,  padding: 10, fontSize: 12}}>{sdata.recovered}</div>\n                            <div className=\"col\" style={{background: \"#f7f7f7\", margin: 5,  padding: 10, fontSize: 12}}>{sdata.deaths}</div>\n                            </div>\n                        </div>\n                        </div>\n    ))}\n                </div>\n            );\n        }\n        return (\n            <div>loading ....</div>\n        );\n    }\n}\n\nexport default StatesView","import React, { Component } from 'react'\nimport { Navbar, NavbarBrand,Nav, NavItem, NavLink} from 'reactstrap'\nimport Lottie from 'react-lottie'\nimport animdata from './logo.json'\nimport logo from './virus.png'\nimport { Button } from \"reactstrap\";\nimport app from './app-debug.apk'\nimport andicon from './android.svg'\n\nclass NavComponent extends Component {\n\n    render(){\n        const defaultOptions = {\n            loop: true,\n            animationData: animdata,\n            rendererSettings: {\n              preserveAspectRatio: \"xMidYMid slice\"\n            }\n        };\n        return (\n            <div>\n                        <Navbar  dark={true} style={{background: \"black\"}}>\n            <div className=\"container-fluid \">\n            <NavbarBrand style={{color: \"white\"}}><img src={logo} style={{height: 30 , margin: \"auto auto\"}}/>Covid19 Tracker</NavbarBrand>\n              <Lottie style={{position: \"absolute\",left: \"auto\",right: 0}}\n                      options={defaultOptions}\n                      height={100}\n                      width={100}></Lottie>\n            </div>\n          \n          </Navbar>\n          \n          <Button color=\"primary\" style={{marginTop: 5}}><a href={app} download style={{color: \"white\"}}><img src={andicon} style={{height: 30 , margin: \"auto auto\"}}/>Android App</a></Button>\n            </div>\n        )\n    }\n\n};\n\nexport default NavComponent","import React, { Component } from 'react';\nimport NationData from './Components/IndiaDataCompnent';\nimport StatesView from './Components/IndiaStatesComponent'\nimport './App.css';\nimport NavComponent from './Components/NavComponent'\n\nclass App extends Component {\n\n\n\nrender(){\n  var d = new Date();\n  return (\n    <div className=\"App\">\n        <NavComponent/>\n        <p style={{textAlign: \"center\", margin:20}}>{d.toLocaleString()}</p>\n        <NationData />\n        <StatesView/>\n    </div>\n  );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}