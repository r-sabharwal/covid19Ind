{"version":3,"sources":["Components/IndiaDataCompnent.js","Components/IndiaStatesComponent.js","Components/NavComponent.js","App.js","serviceWorker.js","index.js"],"names":["NationData","props","state","loading","IndData","fetch","response","json","data","this","setState","TT","console","log","className","total","style","background","textAlign","color","marginLeft","marginRight","marginTop","boxShadow","fontSize","delta","confirmed","recovered","deceased","other","Component","StatesView","StateData","statewise","margin","padding","map","sdata","active","deaths","NavComponent","defaultOptions","loop","animationData","animdata","rendererSettings","preserveAspectRatio","dark","options","height","width","App","d","Date","toLocaleString","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1e2c4fe2.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass NationData extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            loading: true,\n            IndData: null\n        }\n    }\n\n    async componentDidMount(){\n        const response = await fetch(\"https://api.covid19india.org/v4/data.json\");\n        const data = await response.json();\n        this.setState({IndData: data.TT, loading: false})\n        console.log(this.state.IndData)\n    }\n\n    render(){\n        return (\n            <div className=\"container-fluid\">\n                <div>\n                {this.state.loading || !this.state.IndData.total ? (\n                    <div>loading ...</div>\n                ) :\n\n            <div>\n                <div className='row justify-content-center' style={{background: \"\"}}>\n                    <div className=\"col-5 col-lg-2 shadow-lg p-4 mb-5 bg-white rounded\" style={{textAlign: \"center\", color: \"red\", marginLeft: 10, marginRight:10, marginTop: 5, boxShadow: \"1px 1px 2px black\"}}>\n                        <h6 style={{fontSize: 14}}>Confirmed</h6>\n                        <p>+{this.state.IndData.delta.confirmed}</p>\n                        <h2>{this.state.IndData.total.confirmed}</h2>\n                    </div>\n                    <div className=\"col-5 col-lg-2 shadow-lg p-4 mb-5 bg-white rounded\" style={{textAlign: \"center\", color: \"blue\", marginLeft: 10, marginRight:10, marginTop: 5, boxShadow: \"1px 1px 2px black\"}}>\n                        <h6 style={{fontSize: 14}}>Active</h6>\n                        <h2 style={{marginTop: 50}}>{this.state.IndData.total.confirmed - this.state.IndData.total.recovered - this.state.IndData.total.deceased - this.state.IndData.total.other}</h2>\n                    </div>\n                    <div className=\"col-5 col-lg-2 shadow-lg p-4 mb-5 bg-white rounded\" style={{textAlign: \"center\", color: \"green\", marginLeft: 10, marginRight:10, boxShadow: \"1px 1px 2px black\"}}>\n                        <h6 style={{fontSize: 14}}>Recovered</h6>\n                        <p>+{this.state.IndData.delta.recovered}</p>\n                        <h2>{this.state.IndData.total.recovered}</h2>\n                    </div>\n                    <div className=\"col-5 col-lg-2 shadow-lg p-4 mb-5 bg-white rounded\" style={{textAlign: \"center\", color: \"grey\", marginLeft: 10, marginRight:10, boxShadow: \"1px 1px 2px black\"}}>\n                        <h6 style={{fontSize: 14}}>Deceased</h6>\n                        <p>+{this.state.IndData.delta.deceased}</p>\n                        <h2>{this.state.IndData.total.deceased}</h2>\n                    </div>\n                </div>\n            </div>\n            }\n                </div>\n \n            </div>\n        );\n\n        }\n    }\n\n\nexport default NationData;","import React, { Component } from 'react'\nimport axios from 'axios'\nclass StatesView extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            loading: true,\n            StateData: null\n        }\n    }\n\n    async componentDidMount(){\n        const response = await fetch(\"https://api.covid19india.org/data.json\");\n        const data = await response.json();\n        this.setState({StateData: data.statewise, loading: false})\n        console.log(this.state.StateData)\n    }\n \n    render(){\n        if(this.state.loading === false){\n            return (\n                <div>\n                <div className=\"container\">\n                <div className=\"row\">\n                <div className=\"col shadow-md p-2 rounded\" style={{background: \"#e0e0e0\", margin: 5, padding: 10, fontSize: 12}}>State/UT</div>\n                <div className=\"col shadow-md p-2 rounded\" style={{background: \"#e0e0e0\", margin: 5, padding: 10, fontSize: 12}}>Confirmed</div>\n                <div className=\"col shadow-md p-2 rounded\" style={{background: \"#e0e0e0\", margin: 5, padding: 10, fontSize: 12}}>Active</div>\n                <div className=\"col shadow-md p-2 rounded\" style={{background: \"#e0e0e0\", margin: 5, padding: 10 , fontSize: 12}}>Recovered</div>\n                <div className=\"col shadow-md p-2 rounded\" style={{background: \"#e0e0e0\", margin: 5, padding: 10, fontSize: 12}}>Deceased</div>\n                </div>\n                    </div>\n                {this.state.StateData.map((sdata) => (\n                        <div>\n                        <div className=\"container\">\n                            <div className=\"row\">\n                            <div className=\"col shadow-md p-2 rounded\" style={{background: \"#e0e0e0\", margin: 5, padding: 10 , fontSize: 12}}>{sdata.state}</div>\n                            <div className=\"col shadow-md p-2 rounded\" style={{background: \"#f7f7f7\", margin: 5, padding: 10, fontSize: 12}}>{sdata.confirmed}</div>\n                            <div className=\"col shadow-md p-2 rounded\" style={{background: \"#f7f7f7\", margin: 5, padding: 10, fontSize: 12}}>{sdata.active}</div>\n                            <div className=\"col\" style={{background: \"#f7f7f7\", margin: 5,  padding: 10, fontSize: 12}}>{sdata.recovered}</div>\n                            <div className=\"col\" style={{background: \"#f7f7f7\", margin: 5,  padding: 10, fontSize: 12}}>{sdata.deaths}</div>\n                            </div>\n                        </div>\n                        </div>\n    ))}\n                </div>\n            );\n        }\n        return (\n            <div>loading ....</div>\n        );\n    }\n}\n\nexport default StatesView","import React, { Component } from 'react'\nimport { Navbar, NavbarBrand} from 'reactstrap'\nimport Lottie from 'react-lottie'\nimport animdata from './logo.json'\n\nclass NavComponent extends Component {\n\n    render(){\n        const defaultOptions = {\n            loop: true,\n            animationData: animdata,\n            rendererSettings: {\n              preserveAspectRatio: \"xMidYMid slice\"\n            }\n        };\n        return (\n            <Navbar  dark={true} style={{background: \"black\"}}>\n            <div className=\"container \">\n            <NavbarBrand style={{color: \"white\"}}>Covid19Tracker</NavbarBrand>\n              <Lottie\n                      options={defaultOptions}\n                      height={100}\n                      width={100}\n                     style={{textAlign: \"right\"}}></Lottie>\n            </div>\n          </Navbar>\n        )\n    }\n\n};\n\nexport default NavComponent","import React, { Component } from 'react';\nimport NationData from './Components/IndiaDataCompnent';\nimport StatesView from './Components/IndiaStatesComponent'\nimport './App.css';\nimport NavComponent from './Components/NavComponent'\n\nclass App extends Component {\n\n\n\nrender(){\n  var d = new Date();\n  return (\n    <div className=\"App\">\n        <NavComponent/>\n        <p style={{textAlign: \"center\", margin:20}}>{d.toLocaleString()}</p>\n        <NationData />\n        <StatesView/>\n    </div>\n  );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}